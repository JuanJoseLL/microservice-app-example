# /frontend/nginx.conf

upstream auth_api {
    # Service definition: auth-api-service listens on port 80, targets pod port 8000
    server auth-api-service:80;
   
}

upstream todos_api {
    # Assuming todos-api-service listens on 80 and targets the API port
    server todos-api-service:80;
}

upstream users_api {
    # Assuming users-api-service listens on 80 and targets the API port
    server users-api-service:80;
}


server {
    # Nginx listens on 8080 as specified in your Dockerfile EXPOSE directive
    listen       8080;
    listen       [::]:8080; # Optional: Listen on IPv6 as well
    server_name  localhost; # Or your frontend's domain if applicable

    # Root directory for static files
    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # Disable caching for API responses (optional, often desired)
    expires -1;

    # Standard proxy headers to pass original request info to backends
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;


    # Proxy requests for the Auth API
    location /login {
        proxy_pass http://auth_api; # Forward to the auth_api upstream
        # No rewrite needed as the upstream service path is '/' (implied)
        # and the backend Go code expects POST /login
    }

    # Proxy requests for the Todos API
    location /todos {
        proxy_pass http://todos_api;
    }

    location /users {
        proxy_pass http://users_api;
    }


    # --- Static File Serving for the Vue App ---
    # This location block must be LAST as it's the most general.
    location / {
        # Tries to find the file ($uri), then a directory ($uri/),
        # otherwise serves index.html (for SPA routing)
        try_files $uri $uri/ /index.html;

        # Add caching headers for static assets (optional but recommended)
        location ~* \.(?:css|js|map|jpe?g|gif|png|ico|svg|woff2?)$ {
            expires 1y;
            add_header Cache-Control "public";
            access_log off; # Don't log requests for static assets
        }
    }

    # Standard error page handling (optional)
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}